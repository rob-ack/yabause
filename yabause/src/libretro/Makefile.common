SOURCE_DIR := $(CORE_DIR)/..
LIBRETRO_COMM_DIR := $(CORE_DIR)/libretro-common
LIBCHDR_DIR := $(SOURCE_DIR)/libchdr
LZMA_DIR := $(LIBCHDR_DIR)/deps/lzma-19.00
FLAC_DIR := $(LIBCHDR_DIR)/deps/flac-1.3.3
ZLIB_DIR := $(LIBCHDR_DIR)/deps/zlib-1.2.11

GIT_VERSION := " $(shell git rev-parse --short HEAD || echo unknown)"
ifneq ($(GIT_VERSION)," unknown")
	FLAGS += -DGIT_VERSION=\"$(GIT_VERSION)\"
endif

FLAGS += -D__LIBRETRO__ -DHAVE_LIBGL -DVERSION=\"3.4.2\" -DHAVE_LROUND -D_7ZIP_ST -DFLAC__HAS_OGG=0 -DFLAC__NO_DLL \
	-DNO_CLI -DHAVE_BUILTIN_BSWAP16=1 -DHAVE_BUILTIN_BSWAP32=1 -DHAVE_C99_VARIADIC_MACROS=1 -DHAVE_FLOORF=1 \
	-DHAVE_GETTIMEOFDAY=1 -DHAVE_STDINT_H=1 -DHAVE_SYS_TIME_H=1 -DIMPROVED_SAVESTATES -DPACKAGE_VERSION=\"1.3.3\"

ifeq ($(ARCH_IS_LINUX), 1)
	FLAGS += -DARCH_IS_LINUX=1
endif

ifeq ($(ARCH_IS_MACOSX), 1)
	FLAGS += -DARCH_IS_MACOSX=1
endif

ifeq ($(DYNAREC_DEVMIYAX), 1)
	FLAGS += -DDYNAREC_DEVMIYAX=1
endif

ifeq ($(FASTMATH), 1)
	ifeq (,$(findstring msvc,$(platform)))
		FLAGS += -ffast-math
	endif
endif

ifeq ($(FORCE_GLEW), 1)
	FLAGS += -DGLEW_STATIC -D_USEGLEW_ -DGLEW_NO_GLU
else
	FLAGS += -DHAVE_GLSYM_PRIVATE
endif

ifeq ($(HAVE_SYS_PARAM_H), 1)
	FLAGS += -DHAVE_SYS_PARAM_H
endif

ifeq ($(HAVE_FSEEKO), 1)
	FLAGS += -DHAVE_FSEEKO
endif

ifeq ($(HAVE_MUSASHI), 1)
	FLAGS += -DHAVE_MUSASHI=1
else
	OBJECTS += $(C68KEXEC_OBJECT)
endif

ifeq ($(FORCE_GLES), 1)
	FLAGS += -D_OGLES3_
	LDFLAGS += -lGLESv2
	ifeq ($(FORCE_GLEW), 0)
		FLAGS += -DHAVE_OPENGLES -DHAVE_OPENGLES3
	endif
else
	FLAGS += -D_OGL3_
	ifeq ($(ARCH_IS_WINDOWS), 1)
		LDFLAGS += -lopengl32
	else ifeq ($(ARCH_IS_MACOSX), 1)
		LDFLAGS += -framework OpenGL
	else
		LDFLAGS += -lGL
	endif
endif

INCLUDE_DIRS := $(CORE_DIR) \
	$(SOURCE_DIR) \
	$(LIBRETRO_COMM_DIR)/include \
	$(SOURCE_DIR)/musashi \
	$(LIBCHDR_DIR)/include \
	$(LZMA_DIR)/include \
	$(FLAC_DIR)/include \
	$(FLAC_DIR)/src/include \
	$(ZLIB_DIR)

SOURCES_S :=

SOURCES_C := $(SOURCE_DIR)/osdcore.c \
	$(SOURCE_DIR)/bios.c \
	$(SOURCE_DIR)/cd-libretro.c \
	$(SOURCE_DIR)/cheat.c \
	$(SOURCE_DIR)/coffelf.c \
	$(SOURCE_DIR)/cs0.c \
	$(SOURCE_DIR)/cs1.c \
	$(SOURCE_DIR)/cs2.c \
	$(SOURCE_DIR)/debug.c \
	$(SOURCE_DIR)/error.c \
	$(SOURCE_DIR)/gameinfo.c \
	$(SOURCE_DIR)/japmodem.c \
	$(SOURCE_DIR)/junzip.c \
	$(SOURCE_DIR)/memory.c \
	$(SOURCE_DIR)/movie.c \
	$(SOURCE_DIR)/netlink.c \
	$(SOURCE_DIR)/peripheral.c \
	$(SOURCE_DIR)/profile.c \
	$(SOURCE_DIR)/scspdsp.c \
	$(SOURCE_DIR)/scu.c \
	$(SOURCE_DIR)/scsp.c \
	$(SOURCE_DIR)/sh2cache.c \
	$(SOURCE_DIR)/sh2core.c \
	$(SOURCE_DIR)/sh2d.c \
	$(SOURCE_DIR)/sh2iasm.c \
	$(SOURCE_DIR)/sh2int.c \
	$(SOURCE_DIR)/smpc.c \
	$(SOURCE_DIR)/m68kcore.c \
	$(SOURCE_DIR)/m68kd.c \
	$(SOURCE_DIR)/vidogl.c \
	$(SOURCE_DIR)/yglcache.c \
	$(SOURCE_DIR)/ygles.c \
	$(SOURCE_DIR)/yglshaderes.c \
	$(SOURCE_DIR)/snddummy.c \
	$(SOURCE_DIR)/vdp1.c \
	$(SOURCE_DIR)/vdp2.c \
	$(SOURCE_DIR)/vidshared.c \
	$(SOURCE_DIR)/vidsoft.c \
	$(SOURCE_DIR)/titan/titan.c \
	$(SOURCE_DIR)/yabause.c \
	$(LIBRETRO_COMM_DIR)/compat/compat_posix_string.c \
	$(LIBRETRO_COMM_DIR)/compat/compat_strl.c \
	$(LIBRETRO_COMM_DIR)/compat/fopen_utf8.c \
	$(LIBRETRO_COMM_DIR)/encodings/encoding_utf.c \
	$(LIBRETRO_COMM_DIR)/file/file_path.c \
	$(LIBRETRO_COMM_DIR)/compat/compat_strcasestr.c \
	$(LIBRETRO_COMM_DIR)/vfs/vfs_implementation.c \
	$(LIBRETRO_COMM_DIR)/streams/file_stream.c \
	$(LIBRETRO_COMM_DIR)/streams/file_stream_transforms.c \
	$(LIBCHDR_DIR)/src/libchdr_chd.c \
	$(LIBCHDR_DIR)/src/libchdr_bitstream.c \
	$(LIBCHDR_DIR)/src/libchdr_huffman.c \
	$(LIBCHDR_DIR)/src/libchdr_flac.c \
	$(LIBCHDR_DIR)/src/libchdr_cdrom.c \
	$(FLAC_DIR)/src/stream_decoder.c \
	$(FLAC_DIR)/src/format.c \
	$(FLAC_DIR)/src/bitreader.c \
	$(FLAC_DIR)/src/crc.c \
	$(FLAC_DIR)/src/memory.c \
	$(FLAC_DIR)/src/lpc.c \
	$(FLAC_DIR)/src/cpu.c \
	$(FLAC_DIR)/src/md5.c \
	$(FLAC_DIR)/src/fixed.c \
	$(LZMA_DIR)/src/LzmaEnc.c \
	$(LZMA_DIR)/src/LzFind.c \
	$(LZMA_DIR)/src/LzmaDec.c \
	$(ZLIB_DIR)/adler32.c \
	$(ZLIB_DIR)/crc32.c \
	$(ZLIB_DIR)/inffast.c \
	$(ZLIB_DIR)/inflate.c \
	$(ZLIB_DIR)/inftrees.c \
	$(ZLIB_DIR)/zutil.c \
	$(CORE_DIR)/libretro.c

ifeq ($(FORCE_GLEW), 1)
	SOURCES_C += $(SOURCE_DIR)/gllibs/glew/glew.c
	INCLUDE_DIRS += $(SOURCE_DIR)/gllibs/include
else
	SOURCES_C += $(LIBRETRO_COMM_DIR)/glsm/glsm.c \
		$(LIBRETRO_COMM_DIR)/glsym/rglgen.c \
		$(CORE_DIR)/glsym_private.c
	ifeq ($(FORCE_GLES), 1)
		SOURCES_C += $(LIBRETRO_COMM_DIR)/glsym/glsym_es3.c
	else
		SOURCES_C += $(LIBRETRO_COMM_DIR)/glsym/glsym_gl.c
	endif
endif

SOURCES_CXX := $(SOURCE_DIR)/Counter.cpp \
	$(SOURCE_DIR)/ygl_texture.cpp

ifeq ($(HAVE_MUSASHI), 1)
	SOURCES_C += $(SOURCE_DIR)/musashi/m68kcpu.c \
	$(SOURCE_DIR)/musashi/m68kops.c \
	$(SOURCE_DIR)/musashi/m68kopnz.c \
	$(SOURCE_DIR)/musashi/m68kopac.c \
	$(SOURCE_DIR)/musashi/m68kopdm.c \
	$(SOURCE_DIR)/m68kmusashi.c
else
	SOURCES_C += $(SOURCE_DIR)/c68k/c68k.c \
	$(SOURCE_DIR)/m68kc68k.c
endif

ifeq ($(DYNAREC_DEVMIYAX), 1)
	ifeq ($(USE_ARM_DRC), 1)
		SOURCES_S += $(SOURCE_DIR)/sh2_dynarec_devmiyax/dynalib_arm.s
	else ifeq ($(USE_AARCH64_DRC), 1)
		SOURCES_S += $(SOURCE_DIR)/sh2_dynarec_devmiyax/dynalib_arm64.s
	else ifeq ($(USE_X86_DRC), 1)
		$(OBJECTS_S) += $(SOURCE_DIR)/sh2_dynarec_devmiyax/dynalib.obj
	endif
	SOURCES_CXX += $(SOURCE_DIR)/sh2_dynarec_devmiyax/DynarecSh2CInterface.cpp \
		$(SOURCE_DIR)/sh2_dynarec_devmiyax/DynarecSh2.cpp
endif

ifeq ($(USE_RTHREADS), 1)
	SOURCES_C += $(SOURCE_DIR)/thr-rthreads.c \
		$(LIBRETRO_COMM_DIR)/rthreads/rthreads.c
else
	ifeq ($(ARCH_IS_LINUX), 1)
		SOURCES_C += $(SOURCE_DIR)/thr-linux.c
	else ifeq ($(ARCH_IS_MACOSX), 1)
		SOURCES_C += $(SOURCE_DIR)/thr-linux.c
	else
		SOURCES_C += $(SOURCE_DIR)/thr-windows.c
	endif
endif

M68KMAKE_EXE = m68kmake$(EXE_EXT)
GEN68K_EXE = gen68k$(EXE_EXT)
GEN68K_INC_SOURCES := $(SOURCE_DIR)/c68k/c68k_ini.inc \
	$(SOURCE_DIR)/c68k/c68k_op0.inc \
	$(SOURCE_DIR)/c68k/c68k_op1.inc \
	$(SOURCE_DIR)/c68k/c68k_op2.inc \
	$(SOURCE_DIR)/c68k/c68k_op3.inc \
	$(SOURCE_DIR)/c68k/c68k_op4.inc \
	$(SOURCE_DIR)/c68k/c68k_op5.inc \
	$(SOURCE_DIR)/c68k/c68k_op6.inc \
	$(SOURCE_DIR)/c68k/c68k_op7.inc \
	$(SOURCE_DIR)/c68k/c68k_op8.inc \
	$(SOURCE_DIR)/c68k/c68k_op9.inc \
	$(SOURCE_DIR)/c68k/c68k_opA.inc \
	$(SOURCE_DIR)/c68k/c68k_opB.inc \
	$(SOURCE_DIR)/c68k/c68k_opC.inc \
	$(SOURCE_DIR)/c68k/c68k_opD.inc \
	$(SOURCE_DIR)/c68k/c68k_opE.inc \
	$(SOURCE_DIR)/c68k/c68k_opF.inc

M68KMAKE_INC_SOURCES := $(SOURCE_DIR)/musashi/m68kops.h \
	$(SOURCE_DIR)/musashi/m68kopac.c \
	$(SOURCE_DIR)/musashi/m68kopdm.c \
	$(SOURCE_DIR)/musashi/m68kopnz.c \
	$(SOURCE_DIR)/musashi/m68kops.c

C68KEXEC_SOURCE := $(SOURCE_DIR)/c68k/c68kexec.c
C68KEXEC_OBJECT := $(C68KEXEC_SOURCE:.c=.c.o)

OBJECTS_C += $(SOURCES_C:.c=.c.o)
OBJECTS_CXX += $(SOURCES_CXX:.cpp=.cpp.o)
OBJECTS_S += $(SOURCES_S:.s=.s.o)

